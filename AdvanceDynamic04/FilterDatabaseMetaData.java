/*
 * This class generated by com.mchange.v2.codegen.intfc.DelegatorGenerator
 * Mon Jan 13 15:11:16 IST 2025
 * DO NOT HAND EDIT!!!!
 */
package com.mchange.v2.sql.filter;

import java.lang.Class;
import java.lang.Object;
import java.lang.String;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.RowIdLifetime;
import java.sql.SQLException;

public abstract class FilterDatabaseMetaData implements DatabaseMetaData
{
	protected DatabaseMetaData inner;
	
	public FilterDatabaseMetaData(DatabaseMetaData inner)
	{ this.inner = inner; }
	
	public FilterDatabaseMetaData()
	{}
	
	public void setInner( DatabaseMetaData inner )
	{ this.inner = inner; }
	
	public DatabaseMetaData getInner()
	{ return inner; }
	
	public ResultSet getAttributes(String a, String b, String c, String d) throws SQLException
	{
		return inner.getAttributes(a, b, c, d);
	}
	
	public boolean isReadOnly() throws SQLException
	{
		return inner.isReadOnly();
	}
	
	public String getURL() throws SQLException
	{
		return inner.getURL();
	}
	
	public boolean supportsDataDefinitionAndDataManipulationTransactions() throws SQLException
	{
		return inner.supportsDataDefinitionAndDataManipulationTransactions();
	}
	
	public String getSQLKeywords() throws SQLException
	{
		return inner.getSQLKeywords();
	}
	
	public boolean nullsAreSortedHigh() throws SQLException
	{
		return inner.nullsAreSortedHigh();
	}
	
	public String getUserName() throws SQLException
	{
		return inner.getUserName();
	}
	
	public String getSystemFunctions() throws SQLException
	{
		return inner.getSystemFunctions();
	}
	
	public boolean supportsGroupBy() throws SQLException
	{
		return inner.supportsGroupBy();
	}
	
	public boolean supportsOuterJoins() throws SQLException
	{
		return inner.supportsOuterJoins();
	}
	
	public String getDriverName() throws SQLException
	{
		return inner.getDriverName();
	}
	
	public String getStringFunctions() throws SQLException
	{
		return inner.getStringFunctions();
	}
	
	public boolean supportsConvert(int a, int b) throws SQLException
	{
		return inner.supportsConvert(a, b);
	}
	
	public boolean supportsConvert() throws SQLException
	{
		return inner.supportsConvert();
	}
	
	public boolean nullsAreSortedLow() throws SQLException
	{
		return inner.nullsAreSortedLow();
	}
	
	public String getDriverVersion() throws SQLException
	{
		return inner.getDriverVersion();
	}
	
	public boolean usesLocalFiles() throws SQLException
	{
		return inner.usesLocalFiles();
	}
	
	public ResultSet getUDTs(String a, String b, String c, int[] d) throws SQLException
	{
		return inner.getUDTs(a, b, c, d);
	}
	
	public ResultSet getTypeInfo() throws SQLException
	{
		return inner.getTypeInfo();
	}
	
	public ResultSet getProcedures(String a, String b, String c) throws SQLException
	{
		return inner.getProcedures(a, b, c);
	}
	
	public ResultSet getPrimaryKeys(String a, String b, String c) throws SQLException
	{
		return inner.getPrimaryKeys(a, b, c);
	}
	
	public int getMaxRowSize() throws SQLException
	{
		return inner.getMaxRowSize();
	}
	
	public ResultSet getImportedKeys(String a, String b, String c) throws SQLException
	{
		return inner.getImportedKeys(a, b, c);
	}
	
	public Connection getConnection() throws SQLException
	{
		return inner.getConnection();
	}
	
	public String getProcedureTerm() throws SQLException
	{
		return inner.getProcedureTerm();
	}
	
	public boolean deletesAreDetected(int a) throws SQLException
	{
		return inner.deletesAreDetected(a);
	}
	
	public ResultSet getColumns(String a, String b, String c, String d) throws SQLException
	{
		return inner.getColumns(a, b, c, d);
	}
	
	public String getSchemaTerm() throws SQLException
	{
		return inner.getSchemaTerm();
	}
	
	public ResultSet getTables(String a, String b, String c, String[] d) throws SQLException
	{
		return inner.getTables(a, b, c, d);
	}
	
	public boolean supportsUnion() throws SQLException
	{
		return inner.supportsUnion();
	}
	
	public ResultSet getCatalogs() throws SQLException
	{
		return inner.getCatalogs();
	}
	
	public ResultSet getTablePrivileges(String a, String b, String c) throws SQLException
	{
		return inner.getTablePrivileges(a, b, c);
	}
	
	public int getMaxStatements() throws SQLException
	{
		return inner.getMaxStatements();
	}
	
	public ResultSet getExportedKeys(String a, String b, String c) throws SQLException
	{
		return inner.getExportedKeys(a, b, c);
	}
	
	public ResultSet getCrossReference(String a, String b, String c, String d, String e, String f) throws SQLException
	{
		return inner.getCrossReference(a, b, c, d, e, f);
	}
	
	public boolean supportsUnionAll() throws SQLException
	{
		return inner.supportsUnionAll();
	}
	
	public ResultSet getVersionColumns(String a, String b, String c) throws SQLException
	{
		return inner.getVersionColumns(a, b, c);
	}
	
	public int getMaxIndexLength() throws SQLException
	{
		return inner.getMaxIndexLength();
	}
	
	public String getCatalogTerm() throws SQLException
	{
		return inner.getCatalogTerm();
	}
	
	public boolean isCatalogAtStart() throws SQLException
	{
		return inner.isCatalogAtStart();
	}
	
	public ResultSet getIndexInfo(String a, String b, String c, boolean d, boolean e) throws SQLException
	{
		return inner.getIndexInfo(a, b, c, d, e);
	}
	
	public ResultSet getTableTypes() throws SQLException
	{
		return inner.getTableTypes();
	}
	
	public ResultSet getSchemas() throws SQLException
	{
		return inner.getSchemas();
	}
	
	public ResultSet getSchemas(String a, String b) throws SQLException
	{
		return inner.getSchemas(a, b);
	}
	
	public boolean updatesAreDetected(int a) throws SQLException
	{
		return inner.updatesAreDetected(a);
	}
	
	public int getMaxConnections() throws SQLException
	{
		return inner.getMaxConnections();
	}
	
	public boolean insertsAreDetected(int a) throws SQLException
	{
		return inner.insertsAreDetected(a);
	}
	
	public ResultSet getSuperTables(String a, String b, String c) throws SQLException
	{
		return inner.getSuperTables(a, b, c);
	}
	
	public RowIdLifetime getRowIdLifetime() throws SQLException
	{
		return inner.getRowIdLifetime();
	}
	
	public boolean locatorsUpdateCopy() throws SQLException
	{
		return inner.locatorsUpdateCopy();
	}
	
	public int getSQLStateType() throws SQLException
	{
		return inner.getSQLStateType();
	}
	
	public ResultSet getFunctionColumns(String a, String b, String c, String d) throws SQLException
	{
		return inner.getFunctionColumns(a, b, c, d);
	}
	
	public ResultSet getFunctions(String a, String b, String c) throws SQLException
	{
		return inner.getFunctions(a, b, c);
	}
	
	public ResultSet getPseudoColumns(String a, String b, String c, String d) throws SQLException
	{
		return inner.getPseudoColumns(a, b, c, d);
	}
	
	public boolean supportsSharding() throws SQLException
	{
		return inner.supportsSharding();
	}
	
	public boolean supportsSavepoints() throws SQLException
	{
		return inner.supportsSavepoints();
	}
	
	public boolean supportsRefCursors() throws SQLException
	{
		return inner.supportsRefCursors();
	}
	
	public ResultSet getSuperTypes(String a, String b, String c) throws SQLException
	{
		return inner.getSuperTypes(a, b, c);
	}
	
	public boolean nullPlusNonNullIsNull() throws SQLException
	{
		return inner.nullPlusNonNullIsNull();
	}
	
	public boolean supportsMultipleResultSets() throws SQLException
	{
		return inner.supportsMultipleResultSets();
	}
	
	public String getTimeDateFunctions() throws SQLException
	{
		return inner.getTimeDateFunctions();
	}
	
	public int getDriverMinorVersion()
	{
		return inner.getDriverMinorVersion();
	}
	
	public boolean supportsMixedCaseIdentifiers() throws SQLException
	{
		return inner.supportsMixedCaseIdentifiers();
	}
	
	public boolean usesLocalFilePerTable() throws SQLException
	{
		return inner.usesLocalFilePerTable();
	}
	
	public boolean supportsMixedCaseQuotedIdentifiers() throws SQLException
	{
		return inner.supportsMixedCaseQuotedIdentifiers();
	}
	
	public String getExtraNameCharacters() throws SQLException
	{
		return inner.getExtraNameCharacters();
	}
	
	public boolean supportsMultipleTransactions() throws SQLException
	{
		return inner.supportsMultipleTransactions();
	}
	
	public boolean allProceduresAreCallable() throws SQLException
	{
		return inner.allProceduresAreCallable();
	}
	
	public boolean supportsMinimumSQLGrammar() throws SQLException
	{
		return inner.supportsMinimumSQLGrammar();
	}
	
	public String getDatabaseProductVersion() throws SQLException
	{
		return inner.getDatabaseProductVersion();
	}
	
	public boolean storesUpperCaseQuotedIdentifiers() throws SQLException
	{
		return inner.storesUpperCaseQuotedIdentifiers();
	}
	
	public boolean storesMixedCaseQuotedIdentifiers() throws SQLException
	{
		return inner.storesMixedCaseQuotedIdentifiers();
	}
	
	public boolean supportsLikeEscapeClause() throws SQLException
	{
		return inner.supportsLikeEscapeClause();
	}
	
	public int getDriverMajorVersion()
	{
		return inner.getDriverMajorVersion();
	}
	
	public boolean supportsCoreSQLGrammar() throws SQLException
	{
		return inner.supportsCoreSQLGrammar();
	}
	
	public boolean supportsTableCorrelationNames() throws SQLException
	{
		return inner.supportsTableCorrelationNames();
	}
	
	public boolean nullsAreSortedAtEnd() throws SQLException
	{
		return inner.nullsAreSortedAtEnd();
	}
	
	public boolean allTablesAreSelectable() throws SQLException
	{
		return inner.allTablesAreSelectable();
	}
	
	public boolean supportsColumnAliasing() throws SQLException
	{
		return inner.supportsColumnAliasing();
	}
	
	public String getIdentifierQuoteString() throws SQLException
	{
		return inner.getIdentifierQuoteString();
	}
	
	public boolean supportsOrderByUnrelated() throws SQLException
	{
		return inner.supportsOrderByUnrelated();
	}
	
	public boolean supportsAlterTableWithAddColumn() throws SQLException
	{
		return inner.supportsAlterTableWithAddColumn();
	}
	
	public String getDatabaseProductName() throws SQLException
	{
		return inner.getDatabaseProductName();
	}
	
	public String getNumericFunctions() throws SQLException
	{
		return inner.getNumericFunctions();
	}
	
	public String getSearchStringEscape() throws SQLException
	{
		return inner.getSearchStringEscape();
	}
	
	public boolean supportsAlterTableWithDropColumn() throws SQLException
	{
		return inner.supportsAlterTableWithDropColumn();
	}
	
	public boolean storesLowerCaseIdentifiers() throws SQLException
	{
		return inner.storesLowerCaseIdentifiers();
	}
	
	public boolean supportsExpressionsInOrderBy() throws SQLException
	{
		return inner.supportsExpressionsInOrderBy();
	}
	
	public boolean supportsGroupByUnrelated() throws SQLException
	{
		return inner.supportsGroupByUnrelated();
	}
	
	public boolean storesUpperCaseIdentifiers() throws SQLException
	{
		return inner.storesUpperCaseIdentifiers();
	}
	
	public boolean storesMixedCaseIdentifiers() throws SQLException
	{
		return inner.storesMixedCaseIdentifiers();
	}
	
	public boolean supportsGroupByBeyondSelect() throws SQLException
	{
		return inner.supportsGroupByBeyondSelect();
	}
	
	public boolean supportsNonNullableColumns() throws SQLException
	{
		return inner.supportsNonNullableColumns();
	}
	
	public boolean nullsAreSortedAtStart() throws SQLException
	{
		return inner.nullsAreSortedAtStart();
	}
	
	public boolean storesLowerCaseQuotedIdentifiers() throws SQLException
	{
		return inner.storesLowerCaseQuotedIdentifiers();
	}
	
	public boolean dataDefinitionIgnoredInTransactions() throws SQLException
	{
		return inner.dataDefinitionIgnoredInTransactions();
	}
	
	public boolean supportsCatalogsInPrivilegeDefinitions() throws SQLException
	{
		return inner.supportsCatalogsInPrivilegeDefinitions();
	}
	
	public boolean supportsOpenStatementsAcrossRollback() throws SQLException
	{
		return inner.supportsOpenStatementsAcrossRollback();
	}
	
	public boolean supportsIntegrityEnhancementFacility() throws SQLException
	{
		return inner.supportsIntegrityEnhancementFacility();
	}
	
	public boolean dataDefinitionCausesTransactionCommit() throws SQLException
	{
		return inner.dataDefinitionCausesTransactionCommit();
	}
	
	public boolean supportsStoredFunctionsUsingCallSyntax() throws SQLException
	{
		return inner.supportsStoredFunctionsUsingCallSyntax();
	}
	
	public boolean autoCommitFailureClosesAllResultSets() throws SQLException
	{
		return inner.autoCommitFailureClosesAllResultSets();
	}
	
	public boolean supportsDifferentTableCorrelationNames() throws SQLException
	{
		return inner.supportsDifferentTableCorrelationNames();
	}
	
	public boolean supportsSchemasInPrivilegeDefinitions() throws SQLException
	{
		return inner.supportsSchemasInPrivilegeDefinitions();
	}
	
	public boolean supportsDataManipulationTransactionsOnly() throws SQLException
	{
		return inner.supportsDataManipulationTransactionsOnly();
	}
	
	public int getMaxTableNameLength() throws SQLException
	{
		return inner.getMaxTableNameLength();
	}
	
	public ResultSet getBestRowIdentifier(String a, String b, String c, int d, boolean e) throws SQLException
	{
		return inner.getBestRowIdentifier(a, b, c, d, e);
	}
	
	public boolean supportsResultSetType(int a) throws SQLException
	{
		return inner.supportsResultSetType(a);
	}
	
	public boolean ownDeletesAreVisible(int a) throws SQLException
	{
		return inner.ownDeletesAreVisible(a);
	}
	
	public int getMaxStatementLength() throws SQLException
	{
		return inner.getMaxStatementLength();
	}
	
	public boolean supportsANSI92EntryLevelSQL() throws SQLException
	{
		return inner.supportsANSI92EntryLevelSQL();
	}
	
	public boolean supportsOpenCursorsAcrossRollback() throws SQLException
	{
		return inner.supportsOpenCursorsAcrossRollback();
	}
	
	public int getMaxColumnsInTable() throws SQLException
	{
		return inner.getMaxColumnsInTable();
	}
	
	public boolean supportsCatalogsInIndexDefinitions() throws SQLException
	{
		return inner.supportsCatalogsInIndexDefinitions();
	}
	
	public int getMaxColumnsInOrderBy() throws SQLException
	{
		return inner.getMaxColumnsInOrderBy();
	}
	
	public int getMaxProcedureNameLength() throws SQLException
	{
		return inner.getMaxProcedureNameLength();
	}
	
	public boolean doesMaxRowSizeIncludeBlobs() throws SQLException
	{
		return inner.doesMaxRowSizeIncludeBlobs();
	}
	
	public boolean ownInsertsAreVisible(int a) throws SQLException
	{
		return inner.ownInsertsAreVisible(a);
	}
	
	public boolean othersUpdatesAreVisible(int a) throws SQLException
	{
		return inner.othersUpdatesAreVisible(a);
	}
	
	public int getMaxColumnsInGroupBy() throws SQLException
	{
		return inner.getMaxColumnsInGroupBy();
	}
	
	public boolean supportsTransactions() throws SQLException
	{
		return inner.supportsTransactions();
	}
	
	public boolean othersInsertsAreVisible(int a) throws SQLException
	{
		return inner.othersInsertsAreVisible(a);
	}
	
	public boolean supportsCatalogsInProcedureCalls() throws SQLException
	{
		return inner.supportsCatalogsInProcedureCalls();
	}
	
	public boolean supportsBatchUpdates() throws SQLException
	{
		return inner.supportsBatchUpdates();
	}
	
	public boolean supportsCatalogsInTableDefinitions() throws SQLException
	{
		return inner.supportsCatalogsInTableDefinitions();
	}
	
	public boolean supportsPositionedDelete() throws SQLException
	{
		return inner.supportsPositionedDelete();
	}
	
	public boolean supportsLimitedOuterJoins() throws SQLException
	{
		return inner.supportsLimitedOuterJoins();
	}
	
	public boolean supportsStoredProcedures() throws SQLException
	{
		return inner.supportsStoredProcedures();
	}
	
	public boolean supportsSubqueriesInExists() throws SQLException
	{
		return inner.supportsSubqueriesInExists();
	}
	
	public boolean supportsSchemasInProcedureCalls() throws SQLException
	{
		return inner.supportsSchemasInProcedureCalls();
	}
	
	public int getMaxCharLiteralLength() throws SQLException
	{
		return inner.getMaxCharLiteralLength();
	}
	
	public boolean supportsNamedParameters() throws SQLException
	{
		return inner.supportsNamedParameters();
	}
	
	public boolean supportsResultSetConcurrency(int a, int b) throws SQLException
	{
		return inner.supportsResultSetConcurrency(a, b);
	}
	
	public boolean supportsSchemasInDataManipulation() throws SQLException
	{
		return inner.supportsSchemasInDataManipulation();
	}
	
	public String getCatalogSeparator() throws SQLException
	{
		return inner.getCatalogSeparator();
	}
	
	public boolean supportsSchemasInIndexDefinitions() throws SQLException
	{
		return inner.supportsSchemasInIndexDefinitions();
	}
	
	public boolean supportsExtendedSQLGrammar() throws SQLException
	{
		return inner.supportsExtendedSQLGrammar();
	}
	
	public int getMaxColumnsInSelect() throws SQLException
	{
		return inner.getMaxColumnsInSelect();
	}
	
	public boolean othersDeletesAreVisible(int a) throws SQLException
	{
		return inner.othersDeletesAreVisible(a);
	}
	
	public boolean supportsMultipleOpenResults() throws SQLException
	{
		return inner.supportsMultipleOpenResults();
	}
	
	public boolean supportsANSI92FullSQL() throws SQLException
	{
		return inner.supportsANSI92FullSQL();
	}
	
	public boolean supportsFullOuterJoins() throws SQLException
	{
		return inner.supportsFullOuterJoins();
	}
	
	public boolean supportsSchemasInTableDefinitions() throws SQLException
	{
		return inner.supportsSchemasInTableDefinitions();
	}
	
	public int getMaxColumnNameLength() throws SQLException
	{
		return inner.getMaxColumnNameLength();
	}
	
	public boolean supportsCorrelatedSubqueries() throws SQLException
	{
		return inner.supportsCorrelatedSubqueries();
	}
	
	public boolean supportsOpenCursorsAcrossCommit() throws SQLException
	{
		return inner.supportsOpenCursorsAcrossCommit();
	}
	
	public boolean supportsSubqueriesInComparisons() throws SQLException
	{
		return inner.supportsSubqueriesInComparisons();
	}
	
	public boolean supportsGetGeneratedKeys() throws SQLException
	{
		return inner.supportsGetGeneratedKeys();
	}
	
	public int getMaxBinaryLiteralLength() throws SQLException
	{
		return inner.getMaxBinaryLiteralLength();
	}
	
	public boolean supportsSubqueriesInQuantifieds() throws SQLException
	{
		return inner.supportsSubqueriesInQuantifieds();
	}
	
	public int getMaxColumnsInIndex() throws SQLException
	{
		return inner.getMaxColumnsInIndex();
	}
	
	public int getMaxTablesInSelect() throws SQLException
	{
		return inner.getMaxTablesInSelect();
	}
	
	public int getDefaultTransactionIsolation() throws SQLException
	{
		return inner.getDefaultTransactionIsolation();
	}
	
	public boolean supportsTransactionIsolationLevel(int a) throws SQLException
	{
		return inner.supportsTransactionIsolationLevel(a);
	}
	
	public boolean supportsANSI92IntermediateSQL() throws SQLException
	{
		return inner.supportsANSI92IntermediateSQL();
	}
	
	public boolean supportsSubqueriesInIns() throws SQLException
	{
		return inner.supportsSubqueriesInIns();
	}
	
	public ResultSet getProcedureColumns(String a, String b, String c, String d) throws SQLException
	{
		return inner.getProcedureColumns(a, b, c, d);
	}
	
	public boolean supportsOpenStatementsAcrossCommit() throws SQLException
	{
		return inner.supportsOpenStatementsAcrossCommit();
	}
	
	public boolean ownUpdatesAreVisible(int a) throws SQLException
	{
		return inner.ownUpdatesAreVisible(a);
	}
	
	public boolean supportsPositionedUpdate() throws SQLException
	{
		return inner.supportsPositionedUpdate();
	}
	
	public boolean supportsSelectForUpdate() throws SQLException
	{
		return inner.supportsSelectForUpdate();
	}
	
	public int getMaxCursorNameLength() throws SQLException
	{
		return inner.getMaxCursorNameLength();
	}
	
	public int getMaxUserNameLength() throws SQLException
	{
		return inner.getMaxUserNameLength();
	}
	
	public int getMaxSchemaNameLength() throws SQLException
	{
		return inner.getMaxSchemaNameLength();
	}
	
	public boolean supportsCatalogsInDataManipulation() throws SQLException
	{
		return inner.supportsCatalogsInDataManipulation();
	}
	
	public int getMaxCatalogNameLength() throws SQLException
	{
		return inner.getMaxCatalogNameLength();
	}
	
	public ResultSet getColumnPrivileges(String a, String b, String c, String d) throws SQLException
	{
		return inner.getColumnPrivileges(a, b, c, d);
	}
	
	public int getDatabaseMinorVersion() throws SQLException
	{
		return inner.getDatabaseMinorVersion();
	}
	
	public long getMaxLogicalLobSize() throws SQLException
	{
		return inner.getMaxLogicalLobSize();
	}
	
	public boolean generatedKeyAlwaysReturned() throws SQLException
	{
		return inner.generatedKeyAlwaysReturned();
	}
	
	public int getJDBCMinorVersion() throws SQLException
	{
		return inner.getJDBCMinorVersion();
	}
	
	public boolean supportsStatementPooling() throws SQLException
	{
		return inner.supportsStatementPooling();
	}
	
	public ResultSet getClientInfoProperties() throws SQLException
	{
		return inner.getClientInfoProperties();
	}
	
	public int getJDBCMajorVersion() throws SQLException
	{
		return inner.getJDBCMajorVersion();
	}
	
	public int getDatabaseMajorVersion() throws SQLException
	{
		return inner.getDatabaseMajorVersion();
	}
	
	public int getResultSetHoldability() throws SQLException
	{
		return inner.getResultSetHoldability();
	}
	
	public boolean supportsResultSetHoldability(int a) throws SQLException
	{
		return inner.supportsResultSetHoldability(a);
	}
	
	public Object unwrap(Class a) throws SQLException
	{
		return inner.unwrap(a);
	}
	
	public boolean isWrapperFor(Class a) throws SQLException
	{
		return inner.isWrapperFor(a);
	}
	
}
